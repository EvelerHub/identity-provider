# ===============================
# = DATA SOURCE
# ===============================

# Driver for database
spring.datasource.driver-class-name=com.mysql.jdbc.Driver

# Connection url for the database
# "spring_security_acl_education"
spring.datasource.url=jdbc:mysql://localhost/spring_security_acl_education?useSSL=false

# Username and password
spring.datasource.username=root
spring.datasource.password=root

# Number of ms to wait before throwing an exception
# if no connection is available.
spring.datasource.tomcat.max-wait=10000

# Maximum number of active connections
# that can be allocated from this pool at the same time.
spring.datasource.tomcat.max-active=50

# I DON'T KNOW
spring.datasource.tomcat.max-idle=50

# Validate the connection before borrowing it from the pool.
spring.datasource.tomcat.test-on-borrow=true



# ===============================
# = JPA / HIBERNATE
# ===============================

spring.jpa.generate-ddl=true

# Show or not log for each sql query
spring.jpa.show-sql=true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto = update

# Naming strategy
spring.jpa.hibernate.naming.strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect



# ===============================
# = REST DATA
# ===============================

# API endpoint
spring.data.rest.base-path=/api



# ===============================
# = SECURITY CONFIGURATION
# ===============================

#get user by username query for default user scheme
spring.queries.users-by-username-query=SELECT email, password, enabled FROM users WHERE email=?

#get user with authorities query for default user scheme
spring.queries.roles-query=SELECT users.email, authorities.`name` FROM users INNER JOIN user_group ON user_group.user_id = users.id INNER JOIN groups ON user_group.group_id = groups.id INNER JOIN authorities ON authorities.group_id = groups.id WHERE users.email=?
